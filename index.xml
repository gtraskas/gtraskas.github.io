<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A data science blog</title>
    <link>http://gtraskas.github.io/</link>
    <description>Recent content on A data science blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://gtraskas.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Breast Cancer Analysis and Prediction</title>
      <link>http://gtraskas.github.io/project/project7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/project/project7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Identify Fraud from Enron Email</title>
      <link>http://gtraskas.github.io/project/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/project/project1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Explore and Summarize Data</title>
      <link>http://gtraskas.github.io/project/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/project/project2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Wrangle OpenStreetMap Data</title>
      <link>http://gtraskas.github.io/project/project3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/project/project3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Investigate a Dataset</title>
      <link>http://gtraskas.github.io/project/project4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/project/project4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Test a Perceptual Phenomenon</title>
      <link>http://gtraskas.github.io/project/project5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/project/project5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create Tableau Story</title>
      <link>http://gtraskas.github.io/project/project6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/project/project6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Logistic Regression</title>
      <link>http://gtraskas.github.io/post/ex2/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/post/ex2/</guid>
      <description>MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\[&#39;,&#39;\]&#39;]], processEscapes: true, processEnvironments: true, skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;], TeX: { equationNumbers: { autoNumber: &#34;AMS&#34; }, extensions: [&#34;AMSmath.js&#34;, &#34;AMSsymbols.js&#34;] } } });  MathJax.Hub.Queue(function() { // Fix  tags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown. Discussion at // https://github.com/mojombo/jekyll/issues/199 var all = MathJax.Hub.getAllJax(), i; for(i = 0; i This post covers the second exercise from Andrew Ng&amp;rsquo;s Machine Learning Course on Coursera.</description>
    </item>
    
    <item>
      <title>Linear Regression</title>
      <link>http://gtraskas.github.io/post/ex1/</link>
      <pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/post/ex1/</guid>
      <description>MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\[&#39;,&#39;\]&#39;]], processEscapes: true, processEnvironments: true, skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;], TeX: { equationNumbers: { autoNumber: &#34;AMS&#34; }, extensions: [&#34;AMSmath.js&#34;, &#34;AMSsymbols.js&#34;] } } });  MathJax.Hub.Queue(function() { // Fix  tags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown. Discussion at // https://github.com/mojombo/jekyll/issues/199 var all = MathJax.Hub.getAllJax(), i; for(i = 0; i This post covers the first exercise from Andrew Ng&amp;rsquo;s Machine Learning Course on Coursera.</description>
    </item>
    
    <item>
      <title>Spam or Ham?</title>
      <link>http://gtraskas.github.io/post/spamit/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/post/spamit/</guid>
      <description>Implement a spam filter in Python using the Naive Bayes algorithm to classify the emails as spam or not-spam (a.k.a. ham).
Check Modules Check system for the required dependencies.
import sys dependencies = [&amp;quot;nltk&amp;quot;, &amp;quot;numpy&amp;quot;, &amp;quot;pandas&amp;quot;, &amp;quot;scipy&amp;quot;, &amp;quot;sklearn&amp;quot;, &amp;quot;pickle&amp;quot;, &amp;quot;re&amp;quot;] for module in dependencies: print(&amp;quot;\nChecking for &amp;quot; + module + &amp;quot;...&amp;quot;) try: # Import module from string variable: # https://stackoverflow.com/questions/8718885/import-module-from-string-variable # To import using a variable, call __import__(name) module_obj = __import__(module) # To contain the module, create a global object using globals() globals()[module] = module_obj except ImportError: print(&amp;quot;Install &amp;quot; + module + &amp;quot; before continuing&amp;quot;) print(&amp;quot;In a terminal type the following commands:&amp;quot;) print(&amp;quot;python get-pip.</description>
    </item>
    
    <item>
      <title>Influence of Feature Selection and PCA on a Small Dataset</title>
      <link>http://gtraskas.github.io/post/titanic_prediction/</link>
      <pubDate>Thu, 23 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/post/titanic_prediction/</guid>
      <description>This study covers the influence of feature selection and PCA on the Titanic Survivors dataset. Most of the preprocessing code such as data cleaning, encoding and transformation is adapted from the Scikit-Learn ML from Start to Finish work by Jeff Delaney.
Import Data Load the csv train and test files into a pandas dataframe and print the first 5 rows to see a sample of the data. Print also a statistics description of each feature.</description>
    </item>
    
    <item>
      <title>Breast Cancer Machine Learning Prediction</title>
      <link>http://gtraskas.github.io/post/breast_cancer/</link>
      <pubDate>Sun, 29 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/post/breast_cancer/</guid>
      <description>In this study, advanced machine learning methods will be utilized to build and test the performance of a selected algorithm for breast cancer diagnosis.
Dataset Description The Breast Cancer Wisconsin (Diagnostic) DataSet, obtained from Kaggle, contains features computed from a digitized image of a fine needle aspirate (FNA) of a breast mass and describe characteristics of the cell nuclei present in the image.
 Number of instances: 569
 Number of attributes: 32 (ID, diagnosis, 30 real-valued input features)</description>
    </item>
    
    <item>
      <title>How to create your blog/site with Hugo and GitHub</title>
      <link>http://gtraskas.github.io/post/hugo_github_tutorial/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/post/hugo_github_tutorial/</guid>
      <description>A step-by-step guide for macOS
Create two new repositories in GitHub First sign in your profile page or make a new profile, if you haven&amp;rsquo;t already one. Then:
 Go to Repositories page and click to the New icon to create a new repository with the name of your project (e.g. MySite) and initialize with README. This repository will contain Hugoâ€™s content and other source files.
 Similarly, create a second repository with name USERNAME.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>http://gtraskas.github.io/about/me/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://gtraskas.github.io/about/me/</guid>
      <description>Introduction Hi!
My name is George Traskas and I live in Thessaloniki, Greece. I went to Aristotle University of Thessaloniki and graduated with a BSc in Chemistry and a MSc in Chemical Technology. During my MSc studies and for a couple of years I was involved in several water treatment research projects. I am an experienced chemist with a strong background in analytical chemistry and I work at CPERI/CERTH for the last 10 years.</description>
    </item>
    
  </channel>
</rss>